<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="JPA 연결 테스트" tests="1" skipped="0" failures="0" errors="0" timestamp="2023-08-31T09:54:44" hostname="Yunui-MacBookAir.local" time="0.659">
  <properties/>
  <testcase name="delete test" classname="com.example.projectboard.repository.JpaRepositoryTest" time="0.659"/>
  <system-out><![CDATA[18:54:42.527 [Test worker] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils -- Could not detect default configuration classes for test class [com.example.projectboard.repository.JpaRepositoryTest]: JpaRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
18:54:42.595 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper -- Found @SpringBootConfiguration com.example.projectboard.ProjectBoardApplication for test class com.example.projectboard.repository.JpaRepositoryTest

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.1.3)

2023-08-31T18:54:42.842+09:00  INFO 11197 --- [    Test worker] c.e.p.repository.JpaRepositoryTest       : Starting JpaRepositoryTest using Java 20.0.2 with PID 11197 (started by yunkim in /Users/yunkim/Downloads/study/project-board--/project-board--)
2023-08-31T18:54:42.843+09:00  INFO 11197 --- [    Test worker] c.e.p.repository.JpaRepositoryTest       : No active profile set, falling back to 1 default profile: "default"
2023-08-31T18:54:43.054+09:00  INFO 11197 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-08-31T18:54:43.087+09:00  INFO 11197 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 29 ms. Found 2 JPA repository interfaces.
2023-08-31T18:54:43.124+09:00  INFO 11197 --- [    Test worker] beddedDataSourceBeanFactoryPostProcessor : Replacing 'dataSource' DataSource bean with embedded version
2023-08-31T18:54:43.254+09:00  INFO 11197 --- [    Test worker] o.s.j.d.e.EmbeddedDatabaseFactory        : Starting embedded database: url='jdbc:h2:mem:b439cf8b-da60-4bb5-9548-e78c412c3eda;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
2023-08-31T18:54:43.437+09:00  INFO 11197 --- [    Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-08-31T18:54:43.477+09:00  INFO 11197 --- [    Test worker] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.2.7.Final
2023-08-31T18:54:43.478+09:00  INFO 11197 --- [    Test worker] org.hibernate.cfg.Environment            : HHH000406: Using bytecode reflection optimizer
2023-08-31T18:54:43.575+09:00  INFO 11197 --- [    Test worker] o.h.b.i.BytecodeProviderInitiator        : HHH000021: Bytecode provider name : bytebuddy
2023-08-31T18:54:43.671+09:00  INFO 11197 --- [    Test worker] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2023-08-31T18:54:43.841+09:00  INFO 11197 --- [    Test worker] o.h.b.i.BytecodeProviderInitiator        : HHH000021: Bytecode provider name : bytebuddy
2023-08-31T18:54:44.276+09:00  INFO 11197 --- [    Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Hibernate: 
    drop table if exists article cascade 
Hibernate: 
    drop table if exists article_comment cascade 
Hibernate: 
    create table article (
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        modified_at timestamp(6) not null,
        created_by varchar(100) not null,
        modified_by varchar(100) not null,
        content varchar(10000) not null,
        hashtag varchar(255),
        title varchar(255) not null,
        primary key (id)
    )
Hibernate: 
    create table article_comment (
        article_id bigint not null,
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        modified_at timestamp(6) not null,
        content varchar(500) not null,
        created_by varchar(255) not null,
        modified_by varchar(255) not null,
        primary key (id)
    )
Hibernate: 
    create index IDX571gx7oqo5xpmgocegaidlcu9 
       on article (title)
Hibernate: 
    create index IDXai44fu6vaa28ebpydglnv7t3e 
       on article (hashtag)
Hibernate: 
    create index IDXrmt77yibijtk4sarremr67saa 
       on article (created_at)
Hibernate: 
    create index IDXjl4utii2etiocimt799wvtuvv 
       on article (created_by)
Hibernate: 
    create index IDXpieqqnljv147sefofs56h25qx 
       on article_comment (content)
Hibernate: 
    create index IDXh1jx107qecntcbcpc2vfb07ij 
       on article_comment (created_at)
Hibernate: 
    create index IDXc6pa61djuf2o8xnceyyvtdbaq 
       on article_comment (created_by)
Hibernate: 
    alter table if exists article_comment 
       add constraint FKghmocqkgqs5tkmucf5putw64t 
       foreign key (article_id) 
       references article
2023-08-31T18:54:44.309+09:00  INFO 11197 --- [    Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-08-31T18:54:44.621+09:00  INFO 11197 --- [    Test worker] c.e.p.repository.JpaRepositoryTest       : Started JpaRepositoryTest in 1.987 seconds (process running for 2.666)
Hibernate: 
    select
        a1_0.id,
        a1_0.content,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.hashtag,
        a1_0.modified_at,
        a1_0.modified_by,
        a1_0.title 
    from
        article a1_0 
    where
        a1_0.id=?
Hibernate: 
    select
        count(*) 
    from
        article a1_0
Hibernate: 
    select
        count(*) 
    from
        article_comment a1_0
Hibernate: 
    select
        a1_0.article_id,
        a1_0.id,
        a1_0.content,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.modified_at,
        a1_0.modified_by 
    from
        article_comment a1_0 
    where
        array_contains(?,a1_0.article_id) 
    order by
        a1_0.id
Hibernate: 
    delete 
    from
        article_comment 
    where
        id=?
Hibernate: 
    delete 
    from
        article_comment 
    where
        id=?
Hibernate: 
    delete 
    from
        article_comment 
    where
        id=?
Hibernate: 
    delete 
    from
        article 
    where
        id=?
Hibernate: 
    select
        count(*) 
    from
        article a1_0
Hibernate: 
    select
        count(*) 
    from
        article_comment a1_0
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
